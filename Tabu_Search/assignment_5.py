# Author Riyad Khan
# ECE 457A Assignment 5 Question 2

import Tabu_Search as TS
import math

# from random import randint
import pandas as pd
from itertools import combinations, permutations


def master():
    # read distances and flow data set

    dist_df = pd.read_csv("A5-Distance.csv", sep=",", header=None)
    # print(dist_df.values)
    flow_df = pd.read_csv("A5-Flow.csv", sep=",", header=None)

    # intialize a 20*20 tabu list data structure
    tabu_list = [[0] * 20 for i in range(20)]

    soln = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    # define tabu tenure as sqaure root of neighbourhood size and round up
    # for swapping two departments in a list of 20 the neighbourhood size is
    # 20 choose 2  = 190
    neigh_size = math.comb(20, 2)
    tabu_tenure = math.ceil(math.sqrt(neigh_size))
    # above is 14

    # Tabu search

    # 1 Change initial starting point

    # tabu_1 = TS.TS(soln, tabu_tenure, tabu_list, dist_df, flow_df, 1000,  False, False, False)

    # tabu_1.testing()

    # 2 Change initial starting point again

    # soln2 = [18, 19, 20, 17, 16, 14, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

    # tabu_2 = TS.TS(soln2, tabu_tenure, tabu_list, dist_df, flow_df, 1000,  False, False, False)

    # tabu_2.testing()

    # 3 Change tabu tenure smaller

    soln3 = [10, 9, 8, 7, 6, 2, 1, 20, 18, 19, 17, 16, 14, 15, 13, 5, 4, 3, 12, 11]

    # tabu_3 = TS.TS(soln3, 10, tabu_list, dist_df, flow_df, 1000,  False, False, False)

    # tabu_3.testing()

    # 4 Change tabu tenure higher

    # tabu_4 = TS.TS(soln3, 20, tabu_list, dist_df, flow_df, 10000,  False, False, False)

    # tabu_4.testing()

    # 5 Add aspiration criteria best so far

    # tabu_5 = TS.TS(soln3, 14, tabu_list, dist_df, flow_df, 10000,  True, False, False)

    # tabu_5.testing()

    # 6 Only 50% of neigbourhood

    tabu_6 = TS.TS(soln3, 50, tabu_list, dist_df, flow_df, 10000, True, False, True)

    tabu_6.testing()

    # 7 Add freq tabu list

    # soln7 = [18, 19, 20, 3, 16, 14, 12, 13, 15, 11, 10, 9, 8, 1, 6, 5, 4, 17, 2, 7]

    # tabu_7 = TS.TS(soln7, 10, tabu_list, dist_df, flow_df, 10000,  True, True, True)

    # tabu_7.testing()

    # n_dict =  {(1, 2): 1669, (1, 3): 1705, (1, 4): 1780, (1, 5): 1759, (1, 6): 1676, (1, 7): 1653, (1, 8): 1664, (1, 9): 1711, (1, 10): 1727, (1, 11): 1645, (1, 12): 1648, (1, 13): 1719, (1, 14): 1707, (1, 15): 1657, (1, 16): 1676, (1, 17): 1669, (1, 18): 1679, (1, 19): 1699, (1, 20): 1701, (2, 3): 1665, (2, 4): 1685, (2, 5): 1628, (2, 6): 1641, (2, 7): 1636, (2, 8): 1649, (2, 9): 1670, (2, 10): 1647, (2, 11): 1618, (2, 12): 1633, (2, 13): 1623, (2, 14): 1581, (2, 15): 1665, (2, 16): 1651, (2, 17): 1631, (2, 18): 1625, (2, 19): 1618, (3, 4): 1644, (3, 5): 1623, (3, 6): 1704, (3, 7): 1695, (3, 8): 1678, (3, 9): 1657, (3, 10): 1661, (3, 11): 1645, (3, 12): 1714, (3, 13): 1701, (3, 14): 1643, (3, 15): 1613, (3, 16): 1704, (3, 17): 1709, (3, 18): 1659, (3, 19): 1661, (3, 20): 1599, (4, 5): 1655, (4, 6): 1753, (4, 7): 1691, (4, 8): 1681, (4, 9): 1635, (4, 10): 1641, (4, 11): 1681, (4, 12): 1679, (4, 13): 1672, (4, 14): 1615, (4, 15): 1610, (4, 16): 1685, (4, 17): 1684, (4, 18): 1637, (4, 19): 1631, (4, 20): 1655, (5, 6): 1749, (5, 7): 1727, (5, 8): 1685, (5, 9): 1633, (5, 10): 1640, (5, 11): 1679, (5, 12): 1649, (5, 13): 1673, (5, 14): 1634, (5, 15): 1631, (5, 16): 1695, (5, 17): 1683, (5, 18): 1652, (5, 19): 1659, (5, 20): 1678, (6, 7): 1653, (6, 8): 1663, (6, 9): 1705, (6, 10): 1755, (6, 11): 1659, (6, 12): 1647, (6, 13): 1686, (6, 14): 1743, (6, 15): 1690, (6, 16): 1713, (6, 17): 1710, (6, 18): 1689, (6, 19): 1717, (6, 20): 1727, (7, 8): 1675, (7, 9): 1693, (7, 10): 1710, (7, 11): 1649, (7, 12): 1697, (7, 13): 1685, (7, 14): 1678, (7, 15): 1689, (7, 16): 1687, (7, 17): 1715, (7, 18): 1694, (7, 19): 1717, (7, 20): 1696, (8, 9): 1669, (8, 10): 1709, (8, 11): 1659, (8, 12): 1681, (8, 13): 1666, (8, 14): 1633, (8, 15): 1690, (8, 16): 1709, (8, 17): 1676, (8, 18): 1661, (8, 19): 1707, (8, 20): 1655, (9, 10): 1672, (9, 11): 1621, (9, 12): 1681, (9, 13): 1671, (9, 14): 1634, (9, 15): 1647, (9, 16): 1649, (9, 17): 1687, (9, 18): 1648, (9, 19): 1637, (9, 20): 1612, (10, 11): 1658, (10, 12): 1703, (10, 13): 1713, (10, 14): 1671, (10, 15): 1661, (10, 16): 1709, (10, 17): 1701, (10, 18): 1687, (10, 19): 1664, (10, 20): 1639, (11, 12): 1629, (11, 13): 1639, (11, 14): 1646, (11, 15): 1651, (11, 16): 1683, (11, 17): 1659, (11, 18): 1642, (11, 19): 1681, (11, 20): 1716, (12, 13): 1664, (12, 14): 1689, (12, 15): 1656, (12, 16): 1633, (12, 17): 1640, (12, 18): 1637, (12, 19): 1677, (12, 20): 1635, (13, 14): 1679, (13, 15): 1705, (13, 16): 1648, (13, 17): 1679, (13, 18): 1673, (13, 19): 1689, (13, 20): 1719, (14, 15): 1685, (14, 16): 1707, (14, 17): 1723, (14, 18): 1689, (14, 19): 1676, (14, 20): 1651, (15, 16): 1696, (15, 17): 1659, (15, 18): 1667, (15, 19): 1673, (15, 20): 1641, (16, 17): 1654, (16, 18): 1663, (16, 19): 1721, (16, 20): 1695, (17, 18): 1663, (17, 19): 1677, (17, 20): 1665, (18, 19): 1654, (18, 20): 1647, (19, 20): 1658}

    # print("Before", n_dict)
    # print("Len", len(n_dict))
    # print("\n")
    # n_dict.pop((1, 2))
    # print("After", n_dict)
    # print("Len", len(n_dict))
    # print("\n")


if __name__ == "__main__":
    master()
